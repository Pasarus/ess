trigger:
  - main

pr: none

resources:
  pipelines:
  - pipeline: upstream_scippneutron_main
    project: scipp
    source: Main
    trigger: true

stages:
  - template: code_quality_checks.yml
  - stage: 'test'
    displayName: 'build and package:'

    jobs:
      - job: 'linux'
        displayName: 'linux os'
        timeoutInMinutes: 20
        pool:
          vmImage: 'ubuntu-18.04'
        variables:
          - group: tokens
        steps:
          - checkout: self
            submodules: true
          - bash: |
             echo "##vso[task.prependpath]$CONDA/bin"
             echo "##vso[task.setvariable variable=conda_dir]$CONDA"
            displayName: 'add conda to PATH'
          - bash: |
             set -ex
             conda --version
             conda install --yes anaconda-client conda-build
             conda config --set always_yes yes --set changeps1 no
            displayName: 'create anaconda environment'
          - bash: |
             conda build conda/ --channel scipp/label/main --channel conda-forge --label dev --user scipp --token "$ANACONDA_TOKEN"
            env:
             ANACONDA_TOKEN: $(anaconda_token_secret)
            displayName: 'package'
          - task: PublishBuildArtifacts@1
            inputs:
             PathtoPublish: "$(conda_dir)/conda-bld/linux-64"
             ArtifactName: 'linux-64'
            displayName: 'Publish Conda package artefacts'
      - job: 'osx'
        displayName: 'mac os'
        timeoutInMinutes: 20
        pool:
          vmImage: 'macOS-10.14'
        variables:
          - group: tokens
        steps:
          - checkout: self
            submodules: true
          - bash: |
             echo "##vso[task.prependpath]$CONDA/bin"
             echo "##vso[task.setvariable variable=conda_dir]$CONDA"
            displayName: 'add conda to PATH'
          - bash: |
             sudo chown -R $USER $CONDA
            displayName: 'Take ownership of Conda installation'
          - bash: |
             set -ex
             conda --version
             conda install --yes anaconda-client conda-build
             conda config --set always_yes yes --set changeps1 no
            displayName: 'create anaconda environment'
          - bash: |
             conda build conda/ --channel scipp/label/main --channel conda-forge --label dev --user scipp --token "$ANACONDA_TOKEN"
            env:
             ANACONDA_TOKEN: $(anaconda_token_secret)
            displayName: 'package'
          - task: PublishBuildArtifacts@1
            inputs:
             PathtoPublish: "$(conda_dir)/conda-bld/osx-64"
             ArtifactName: 'osx-64'
            displayName: 'Publish Conda package artefacts'
      - job: 'windows'
        displayName: 'Windows'
        timeoutInMinutes: 20
        strategy:
          matrix:
            Python37:
              PYTHON_VERSION: '3.7'
            Python38:
              PYTHON_VERSION: '3.8'
        pool:
          vmImage: 'windows-latest'
        variables:
          - group: tokens
        steps:
          - checkout: self
            submodules: true
          - powershell: |
              Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
              Write-Host "##vso[task.setvariable variable=conda_dir]$env:CONDA"
            displayName: 'add conda to PATH'
          - script: |
              conda --version
              conda install --yes anaconda-client conda-build
              conda config --set always_yes yes --set changeps1 no
            displayName: 'Conda configuration'
          - script: |
              conda build --user scipp --token "%ANACONDA_TOKEN%" --channel conda-forge --channel scipp/label/main --label dev --python="%PYTHON_VERSION%" ./conda
            env:
              ANACONDA_TOKEN: $(anaconda_token_secret)
            displayName: 'package'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(conda_dir)/conda-bld/win-64"
              ArtifactName: 'win-64'
            displayName: 'Publish Conda package artefacts'

  - stage: 'build_documentation'
    displayName: 'Build documentation'
    jobs:
      - template: documentation_build.yml

  - stage: 'deploy_documentation'
    displayName: 'Deploy documentation'
    jobs:
      - template: documentation_deploy.yml
